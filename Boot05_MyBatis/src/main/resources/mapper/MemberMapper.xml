<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<update id="update" parameterType="com.example.boot05.dto.MemberDto">
		UPDATE member
		SET name=#{name}, addr=#{addr}
		WHERE num=#{num}
	</update>
	
	<!-- 
		parameter 로 전달된 데이터가 int type 이기 때문에 parameterType="int" 라고 작성한다.
		select 된 row 하나의 정보를 MemberDto 객체에 담아야 하기 때문에 
		resultType="com.example.boot05.dto.MemberDto" 라고 작성ㅇ한다.
	 -->
	<select id="getData" parameterType="int" resultType="com.example.boot05.dto.MemberDto">
		SELECT num, name || '님' AS name, addr
		FROM member
		WHERE num=#{num}
	</select>

	<!-- parameterType으로 전달된 데이터는 숫자 1개이기 때문에 #{ } 안에 문자열을 아무거나 적어도 동작한다 -->
	<delete id="delete" parameterType="int">
		DELETE FROM member
		WHERE num=#{num }
	</delete>
	<select id="getList" resultType="MemberDto">
		SELECT num, name, addr
		FROM member
		ORDER BY num ASC
	</select>
	
	<!--
		#{name} 은 MemberDto 객체의 getName() 메소드를 호출해서 리턴되는 값을 해당 위치에 바인딩하라는 의미이다
	 	#{addr} 은 MemberDto 객체의 getName() 메소드를 호출해서 리턴되는 값을 해당 위치에 바인딩하라는 의미이다
	 -->
	<insert id="insert" parameterType="com.example.boot05.dto.MemberDto">
		INSERT INTO member
		(num, name, addr)
		VALUES(member_seq.NEXTVAL, #{name}, #{addr})
	</insert>
</mapper>