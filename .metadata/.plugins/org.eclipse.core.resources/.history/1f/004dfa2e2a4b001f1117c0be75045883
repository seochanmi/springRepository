<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8">
<title>/gallery/upload_form.html</title>
</head>
<body>
	<div class="container">
		<h1>이미지 업로드 폼</h1>
		<form th:action="@{/gallery/upload}" method="post" enctype="multipart/form-data">
			<div>
				<label for="caption">설명</label>
				<input type="text" name="caption" id="caption" />
			</div>
			<div>
				<label for="image">이미지</label>
				<input type="file" name="image" id="image" accept="image/*" />
			</div>
			<button type="submit">업로드</button>
		</form>
	</div>
	
	
	<div>
				<label>갤러리 이미지 (아래 이미지를 클릭하거나 이미지를 drop 하세요)</label>
				<div id="dropZone">
					<a href="javascript:" id="image">
						<th:block th:if="${dto.image eq null}">
							<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
								<path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"/>
								<path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z"/>
							</svg>
						</th:block>
						<th:block th:unless="${dto.image eq null}">
							<img id="image" th:src="@{/upload/images/{name}(name=${dto.image})}" alt="갤러리 이미지" />
						</th:block>
					</a>
				</div>
			</div>
			<button type="submit">업로드확인</button>
			<button type="reset">취소</button>
			<input type="file" id="image" name="image"  accept="image/*" />
		</form>
	</div>
	<script>
		//링크를 클릭했을때 
		document.querySelector("#image").addEventListener("click", ()=>{
			// input type="file" 요소를 강제 클릭해서 파일 선택 창을 띄운다.
			document.querySelector("#image").click();
		});
		//새로운 이미지가 선택되었을때
		document.querySelector("#image").addEventListener("change", (e)=>{
			//선택된 파일 배열 객체를 얻어낸다
			const files=e.target.files;
			//만일 파일 데이터가 존재한다면
			if(files.length > 0){
				//파일로 부터 데이터를 읽어들일 객체 생성
				const reader=new FileReader();
				//파일 배열의 0 번방에 있는 파일을 data url 형식으로 읽어들인다 
				reader.readAsDataURL(files[0]);
				//다 읽었을때 실행할 함수 등록
				reader.onload=(event)=>{
					//읽은 문자열(data url 형식의 긴 문자열) 얻어내기
					const data=event.target.result;
					console.log(data);
					//img 요소를 만들어서 
					const img=document.createElement("img");
					//원하는 속성을 추가하고 
					img.setAttribute("src", data);
					img.setAttribute("id", "image");
					//링크를 찾아서 
					const link=document.querySelector("#image");
					//기존에 출력된 정보를 삭제하고 
					link.innerText="";
					//새로 img 요소를 추가 하기 
					link.append(img);
				};
			}
		});
		
	
</body>
</html>